module.exports = [
  {
    id: "1",
    // tag: "Video",
    title: "Hot Stocks",
    img: "/static/about.png",
    imgSmall: "/static/hot_stocks_login.png",
    bg: "#E9FAFF",
    client: "Envato",
    langages: "Python, JavaScript, PostgreSQL, FastAPI, React, Redux, RESTful APIs, JSON Web Token, Agile, Wireframes",
    link: "https://gitlab.com/igneous-rocks/hot-stocks",
    linkText: "Hot-Stocks",
    description:
      "Hot Stocks - revolutionizing stocks to make them, like, totally cool. Modern, social-media-app-inspired stock portfolio solution designed for evaluating live stock and related news data, managing a portfolio, and saving data of interest. Features FastAPI, React Redux, PostgreSQL, and data interactions with RESTful APIs. https://igneous-rocks.gitlab.io/hot-stocks/",
  },
  {
    id: "2",
    // tag: "Video",
    title: "Car-Car",
    img: "/static/car_car_home.png",
    imgSmall: "/static/car_car_home.png",
    bg: "#F4F4FF",
    client: "Envato",
    langages: "Python, JavaScript, PostgreSQL, Django, React, RESTful APIs, Microservices, Domain-driven design",
    link: "https://gitlab.com/york.p.shaw/car-car",
    linkText: "Car-Car",
    repository: "https://gitlab.com/york.p.shaw/car-car",
    description:
      "Car-Car, a web application to manage an automobile dealership. The administrator can manage and view inventory, service records, and sales records by employee. There are forms to add vehicle manufacturers, vehicle models, salespeople, and technicians. Customers can fill out a form to schedule a service appointment, and customers who bought a car at the dealership get VIP status. Features Django, PostgreSQL, React, and RabbitMQ,",
  },
  {
    id: "3",
    // tag: "UI/UX",
    title: "Conference GO",
    img: "/static/conference_go_main.png",
    imgSmall: "/static/conference_go_main.png",
    bg: "#FFF0F8",
    client: "Envato",
    langages: "Python, JavaScript, PostgreSQL, Django, React, RESTful APIs, Microservices, Domain-driven design",
    link: "https://gitlab.com/york.p.shaw/conference-GO",
    linkText: "Conference-GO",
    description:
      "Conference-GO, a web application that maintains a database for nationwide conferences. The application was originally a monolitch and was refactored into a microservices-based application. The database keeps track of attendees and conference information, and the administrator can add conferences and conference locations. Users can sign up for conferences. There are RESTful APIs to interact with endpoints that pulls information about a city's current weather. Features Django, SQLite, and React.",
  },
];
